services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_init:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1s
      retries: 10

  postgres-celery-result-backend:
    image: postgres:17
    environment:
      POSTGRES_USER: ${CELERY_POSTGRES_USER}
      POSTGRES_PASSWORD: ${CELERY_POSTGRES_PASSWORD}
      POSTGRES_DB: ${CELERY_POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - celery_postgres_init:/docker-entrypoint-initdb.d/
      - celery_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${CELERY_POSTGRES_USER} -d ${CELERY_POSTGRES_DB}"]
      interval: 1s
      retries: 10

  fastapi:
    build: 
      context: .
      dockerfile: ./fastapi/Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgres
      SQLALCHEMY_DATABASE_URL: postgresql+psycopg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
      memcached:
        condition: service_healthy
    ports:
      - "8000:8000"

  celery_beat:
    build: 
      context: .
      dockerfile: ./celery/Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${CELERY_POSTGRES_USER}
      POSTGRES_PASSWORD: ${CELERY_POSTGRES_PASSWORD}
      POSTGRES_DB: ${CELERY_POSTGRES_DB}
      POSTGRES_HOST: postgres-celery-result-backend
      SQLALCHEMY_DATABASE_URL: postgresql+psycopg://${CELERY_POSTGRES_USER}:${CELERY_POSTGRES_PASSWORD}@postgres-celery-result-backend/${CELERY_POSTGRES_DB}
    depends_on:
      postgres-celery-result-backend:
        condition: service_healthy
    command: celery -A celery_worker.celery beat --loglevel=info

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    ports:
      - "5672:5672"  # RabbitMQ broker
      - "15672:15672" # Management UI (http://localhost:15672)

  memcached:
    image: memcached:latest
    env_file:
      - .env
    container_name: memcached
    ports:
      - "11211:11211"


volumes:
  postgres_data:
  celery_postgres_data:
  postgres_init:
