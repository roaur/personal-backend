services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_init:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1s
      retries: 10

  # postgres_airflow:
  #   image: postgres:17
  #   environment:
  #     POSTGRES_USER: ${AIRFLOW_POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${AIRFLOW_POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${AIRFLOW_POSTGRES_DB}
  #   ports:
  #     - "5433:5432"
  #   volumes:
  #     - postgres_airflow_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${AIRFLOW_POSTGRES_USER} -d ${AIRFLOW_POSTGRES_DB}"]
  #     interval: 1s
  #     retries: 10

  fastapi:
    build: 
      context: .
      dockerfile: ./fastapi/Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgres
      SQLALCHEMY_DATABASE_URL: postgresql+psycopg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
      memcached:
        condition: service_healthy
    ports:
      - "8000:8000"

  # airflow-scheduler:
  #   build: 
  #     context: .
  #     dockerfile: ./airflow/Dockerfile
  #   depends_on:
  #     postgres_airflow:
  #       condition: service_healthy
  #   env_file:
  #     - .env
  #   environment:
  #     PYTHONPATH: /opt/airflow
  #     AIRFLOW__CORE__EXECUTOR: LocalExecutor
  #     AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_POSTGRES_USER}:${AIRFLOW_POSTGRES_PASSWORD}@postgres_airflow/${AIRFLOW_POSTGRES_DB}
  #     AIRFLOW__CORE__FERNET_KEY: '${AIRFLOW_FERNET_KEY}'
  #     AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
  #     AIRFLOW__WEBSERVER__WORKERS: 4
  #   volumes:
  #     - ./airflow/dags:/opt/airflow/dags
  #     - ./airflow/utils:/opt/airflow/utils
  #     - airflow_logs:/opt/airflow/logs
  #     - airflow_plugins:/opt/airflow/plugins
  #   entrypoint: >
  #     bash -c "
  #     airflow db init &&
  #     airflow scheduler"

  # airflow-webserver:
  #   build: 
  #     context: .
  #     dockerfile: ./airflow/Dockerfile
  #   depends_on:
  #     postgres_airflow:
  #       condition: service_healthy
  #   env_file:
  #     - .env
  #   environment:
  #     PYTHONPATH: /opt/airflow
  #     AIRFLOW__CORE__EXECUTOR: LocalExecutor
  #     AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_POSTGRES_USER}:${AIRFLOW_POSTGRES_PASSWORD}@postgres_airflow/${AIRFLOW_POSTGRES_DB}
  #     AIRFLOW__CORE__FERNET_KEY: '${AIRFLOW_FERNET_KEY}'
  #     AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
  #     AIRFLOW_WEB_USERNAME: ${AIRFLOW_WEB_USERNAME}
  #     AIRFLOW_WEB_PASSWORD: ${AIRFLOW_WEB_PASSWORD}
  #     AIRFLOW_WEB_FIRST_NAME: ${AIRFLOW_WEB_FIRST_NAME}
  #     AIRFLOW_WEB_LAST_NAME: ${AIRFLOW_WEB_LAST_NAME}
  #     AIRFLOW_WEB_ROLE: ${AIRFLOW_WEB_ROLE}
  #     AIRFLOW_WEB_EMAIL: ${AIRFLOW_WEB_EMAIL}
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./airflow/dags:/opt/airflow/dags
  #     - ./airflow/utils:/opt/airflow/utils
  #     - airflow_logs:/opt/airflow/logs
  #     - airflow_plugins:/opt/airflow/plugins
  #   entrypoint: >
  #     bash -c "
  #     sleep 5 &&
  #     airflow db init &&
  #     airflow users create --username ${AIRFLOW_WEB_USERNAME} --password ${AIRFLOW_WEB_PASSWORD} --firstname ${AIRFLOW_WEB_FIRST_NAME} --lastname ${AIRFLOW_WEB_LAST_NAME} --role ${AIRFLOW_WEB_ROLE} --email ${AIRFLOW_WEB_EMAIL} &&
  #     airflow webserver"

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    ports:
      - "5672:5672"  # RabbitMQ broker
      - "15672:15672" # Management UI (http://localhost:15672)

  memcached:
    image: memcached:latest
    env_file:
      - .env
    container_name: memcached
    ports:
      - "11211:11211"


volumes:
  airflow_logs:
  airflow_plugins:
  postgres_data:
  postgres_airflow_data:
  postgres_init:
