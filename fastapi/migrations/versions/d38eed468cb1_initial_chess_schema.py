"""Initial chess schema

Revision ID: d38eed468cb1
Revises: 
Create Date: 2024-10-19 20:37:15.548793

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd38eed468cb1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Create the chess schema
    op.execute("CREATE SCHEMA IF NOT EXISTS chess")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('games',
    sa.Column('game_id', sa.String(length=255), nullable=False),
    sa.Column('rated', sa.Boolean(), nullable=False),
    sa.Column('variant', sa.String(length=50), nullable=False),
    sa.Column('speed', sa.String(length=50), nullable=False),
    sa.Column('perf', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('last_move_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('winner', sa.String(length=50), nullable=True),
    sa.Column('pgn', sa.Text(), nullable=True),
    sa.Column('clock_initial', sa.Integer(), nullable=True),
    sa.Column('clock_increment', sa.Integer(), nullable=True),
    sa.Column('clock_total_time', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('game_id'),
    schema='chess'
    )
    op.create_table('players',
    sa.Column('player_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('flair', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('player_id'),
    schema='chess'
    )
    op.create_table('game_moves',
    sa.Column('id', sa.BigInteger(), nullable=False, autoincrement=True),
    sa.Column('game_id', sa.String(length=255), nullable=False),
    sa.Column('move_number', sa.Integer(), nullable=False),
    sa.Column('move', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['chess.games.game_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='chess'
    )
    op.create_table('game_players',
    sa.Column('game_id', sa.String(length=255), nullable=False),
    sa.Column('player_id', sa.Text(), nullable=False),
    sa.Column('color', sa.Text, nullable=False),
    sa.Column('rating_diff', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['chess.games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['player_id'], ['chess.players.player_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('game_id', 'player_id'),
    schema='chess'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('game_players', schema='chess')
    op.drop_table('game_moves', schema='chess')
    op.drop_table('players', schema='chess')
    op.drop_table('games', schema='chess')
    # ### end Alembic commands ###

    # Drop the chess schema
    op.execute("DROP SCHEMA IF EXISTS chess CASCADE")
